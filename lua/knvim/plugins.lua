-------------------------------------
--  File         : plugins.lua
--  Description  : 3rd part plugins palette
--  Author       : Kevin
--  Last Modified: 04 Sep 2023, 11:26
-------------------------------------

local base = require "knvim.base"

local M = {
	-- Alpha
	AlphaHeader = { fg = "#016A60" },
	AlphaButtons = { link = "Keyword" },
	AlphaFooter = { link = "Comment" },

	-- Nvim-Tree
	NvimTreeSymlink = { link = "Function" },
	NvimTreeFolderName = { link = "Normal" },
	NvimTreeRootFolder = { link = "Type" },
	NvimTreeFolderIcon = { fg = "#00afd7" },
	NvimTreeFileIcon = { link = "Type" },
	NvimTreeEmptyFolderName = { link = "Comment" },
	NvimTreeOpenedFolderName = { link = "Directory" },
	NvimTreeExecFile = { link = "Underlined" },
	NvimTreeOpenedFile = { bold = true, underline = true },
	NvimTreeSpecialFile = { fg = "#afaf00", bold = true, italic = true },
	NvimTreeImageFile = { link = "Label" },
	NvimTreeIndentMarker = { link = "Comment" },

	-- Nvim-Treesitter
	["@none"] = { default = true },
	["@error"] = {},
	["@text"] = { default = true },
	["@text.title"] = base.Title,
	["@text.literal"] = base.String,
	["@text.math"] = base.String,
	["@text.reference"] = base.Define,
	["@text.environment"] = base.Typedef,
	["@text.environment.name"] = base.Type,
	["@text.uri"] = { fg = "#00fff2" },
	["@text.strong"] = { bold = true },
	["@text.emphasis"] = { italic = true },
	["@text.underline"] = { underline = true },
	["@text.todo"] = base.Todo,
	["@text.note"] = base.SpecialComment,
	["@text.warning"] = base.Todo,
	["@text.danger"] = base.WarningMsg,
	["@variable"] = { fg = "#2d5d79" },
	["@punctuation.delimiter"] = base.Delimiter,
	["@punctuation.bracket"] = base.Delimiter,
	["@punctuation.special"] = base.Delimiter,
	["@constant"] = base.Constant,
	["@constant.builtin"] = base.Special,
	["@constant.macro"] = base.Define,
	["@string"] = base.String,
	["@string.regex"] = base.SpellRare,
	["@string.escape"] = { fg = "#ff005f" },
	["@string.special"] = base.SpecialChar,
	["@character"] = base.Character,
	["@number"] = base.Number,
	["@boolean"] = base.Boolean,
	["@float"] = base.Float,
	["@function"] = base.Function,
	["@function.builtin"] = base.Special,
	["@function.macro"] = base.Macro,
	["@parameter"] = base.Identifier,
	["@parameter.reference"] = base.Identifier,
	["@method"] = base.Function,
	["@field"] = base.Identifier,
	["@property"] = base.Identifier,
	["@constructor"] = base.Special,
	["@annotation"] = base.PreProc,
	["@attribute"] = base.PreProc,
	["@namespace"] = base.Include,
	["@conditional"] = base.Conditional,
	["@repeat"] = base.Repeat,
	["@label"] = base.Label,
	["@operator"] = base.Operator,
	["@keyword"] = base.Keyword,
	["@keyword.function"] = base.Keyword,
	["@keyword.operator"] = base.k_themeRed,
	["@exception"] = base.Exception,
	["@type"] = base.Type,
	["@type.builtin"] = base.Type,
	["@include"] = base.Include,
	["@variable.builtin"] = { fg = "#3d6d99" },
	["@comment"] = base.Comment,
	["@structure"] = base.k_themeOrange,
	["@tag"] = base.Tag,
	["@tag.delimiter"] = base.k_themeGreen,
	["@tag.attribute"] = base.PreProc,
	["@lsp.type.comment"] = base.Comment,
	["@lsp.type.enum"] = base.Type,
	["@lsp.type.interface"] = base.Identifier,
	["@lsp.type.keyword"] = base.Keyword,
	["@lsp.type.namespace"] = { link = "@namespace" },
	["@lsp.type.parameter"] = { link = "@parameter" },
	["@lsp.type.property"] = { link = "@property" },
	["@lsp.type.variable"] = { link = "@variable" },
	["@lsp.typemod.method.defaultLibrary"] = { link = "@function.builtin" },
	["@lsp.typemod.function.defaultLibrary"] = { link = "@function.builtin" },
	["@lsp.typemod.variable.defaultLibrary"] = { link = "@variable.builtin" },
	["@lsp.typemod.operator.injected"] = { link = "@operator" },
	["@lsp.typemod.string.injected"] = { link = "@string" },
	["@lsp.typemod.variable.injected"] = { link = "@variable" },

	["@codeSpan"] = { bg = "#3c3c3c", fg = "#DCDCDC" },
	["@codeBlock"] = {},
	["@todo"] = base.Todo,
	-- ["@spell"] = { underline = true },

	-- Diagnostic
	DiagnosticError = { fg = "#f44747" },
	DiagnosticInfo = { fg = "#00ffaa" },
	DiagnosticWarn = { fg = "#ff8800" },
	DiagnosticWarning = { fg = "#ff8800" },
	DiagnosticInformation = { fg = "#ffcc66" },
	DiagnosticHint = { fg = "#4fc1ff" },
	DiagnosticSignError = { fg = "#f44747" },
	DiagnosticSignWarning = { fg = "#ff8800" },
	DiagnosticSignInformation = { fg = "#ffcc66" },
	DiagnosticSignHint = { fg = "#4fc1ff" },
	DiagnosticVirtualTextError = { fg = "#f44747" },
	DiagnosticVirtualTextWarning = { fg = "#ff8800" },
	DiagnosticVirtualTextInformation = { fg = "#ffcc66" },
	DiagnosticVirtualTextWarn = { link = "DiagnosticWarning" },
	DiagnosticVirtualTextInfo = { link = "DiagnosticInfo" },
	DiagnosticVirtualTextHint = { link = "DiagnosticHint" },
	DiagnosticSignInfo = { link = "DiagnosticInfo" },
	DiagnosticSignWarn = { link = "DiagnosticWarn" },
	DiagnosticSignOther = { link = "DiagnosticOther" },
	DiagnosticFloatingHint = { link = "DiagnosticHint" },
	DiagnosticFloatingInfo = { link = "DiagnosticInfo" },
	DiagnosticFloatingWarn = { link = "DiagnosticWarn" },
	DiagnosticFloatingError = { link = "DiagnosticError" },
	DiagnosticUnderlineHint = { fg = "NONE", bg = "NONE", sp = "#ff8800", undercurl = true },
	DiagnosticUnderlineInfo = { fg = "NONE", bg = "NONE", sp = "#ff8800", undercurl = true },
	DiagnosticUnderlineWarn = { fg = "NONE", bg = "NONE", sp = "#ff8800", undercurl = true },
	DiagnosticUnderlineError = { fg = "NONE", bg = "NONE", sp = "#f44747", undercurl = true },
	LspDiagnosticsError = { fg = "#f44747", bg = "NONE" },
	LspDiagnosticsWarning = { fg = "#ff8800", bg = "NONE" },
	LspDiagnosticsInfo = { fg = "#ff8800", bg = "NONE" },
	LspDiagnosticsInformation = { link = "LspDiagnosticsInfo" },
	LspDiagnosticsHint = { fg = "#ff8800", bg = "NONE" },
	LspDiagnosticsDefaultError = { link = "LspDiagnosticsError" },
	LspDiagnosticsDefaultWarning = { link = "LspDiagnosticsWarning" },
	LspDiagnosticsDefaultInformation = { link = "LspDiagnosticsInfo" },
	LspDiagnosticsDefaultInfo = { link = "LspDiagnosticsInfo" },
	LspDiagnosticsDefaultHint = { link = "LspDiagnosticsHint" },
	LspDiagnosticsVirtualTextError = { link = "DiagnosticVirtualTextError" },
	LspDiagnosticsVirtualTextWarning = { link = "DiagnosticVirtualTextWarn" },
	LspDiagnosticsVirtualTextInformation = { link = "DiagnosticVirtualTextInfo" },
	LspDiagnosticsVirtualTextInfo = { link = "DiagnosticVirtualTextInfo" },
	LspDiagnosticsVirtualTextHint = { link = "DiagnosticVirtualTextHint" },
	LspDiagnosticsFloatingError = { link = "LspDiagnosticsError" },
	LspDiagnosticsFloatingWarning = { link = "LspDiagnosticsWarning" },
	LspDiagnosticsFloatingInformation = { link = "LspDiagnosticsInfo" },
	LspDiagnosticsFloatingInfo = { link = "LspDiagnosticsInfo" },
	LspDiagnosticsFloatingHint = { link = "LspDiagnosticsHint" },
	LspDiagnosticsSignError = { link = "LspDiagnosticsError" },
	LspDiagnosticsSignWarning = { link = "LspDiagnosticsWarning" },
	LspDiagnosticsSignInformation = { link = "LspDiagnosticsInfo" },
	LspDiagnosticsSignInfo = { link = "LspDiagnosticsInfo" },
	LspDiagnosticsSignHint = { link = "LspDiagnosticsHint" },
	LspDiagnosticsUnderlineError = { link = "DiagnosticUnderlineError" },
	LspDiagnosticsUnderlineWarning = { link = "DiagnosticUnderlineWarn" },
	LspDiagnosticsUnderlineInformation = { link = "DiagnosticUnderlineInfo" },
	LspDiagnosticsUnderlineInfo = { link = "DiagnosticUnderlineInfo" },
	LspDiagnosticsUnderlineHint = { link = "DiagnosticUnderlineHint" },

	-- Telescope.nvim
	TelescopeSelection = { link = "PmenuSel" },
	TelescopeSelectionCaret = { fg = "#015A60" },
	TelescopeMultiSelection = { bold = true, fg = "Gold1" },
	TelescopeNormal = { link = "NormalFloat" },
	TelescopeBorder = { link = "FloatBorder" },
	TelescopePromptBorder = base.Title,
	TelescopeResultsBorder = { link = "WinSeparator" },
	TelescopePreviewBorder = { link = "WinSeparator" },
	TelescopeMatching = { link = "CmpItemAbbrMatch" },
	TelescopePromptPrefix = { fg = "#36FF5A" },
	TelescopePrompt = { link = "TelescopeNormal" },
	TelescopeResultsDiffAdd = { link = "DiffAdd" },
	TelescopeResultsDiffChange = { link = "DiffChange" },
	TelescopeResultsDiffDelete = { link = "DiffDelete" },
	TelescopeResultsDiffUntracked = { link = "Ignore" },

	-- GitSigns.nvim
	GitSignsAdd = { fg = "#73C990", bg = "NONE" },
	GitSignsChange = { fg = "#E1C08C", bg = "NONE" },
	GitSignsDelete = { fg = "#b2555b", bg = "NONE" },
	GitSignsCurrentLineBlame = base.NonText,

	-- Nvim-Cmp
	CmpItemAbbr = { fg = "#DCDCDC" },
	CmpItemKind = { link = "Type" },
	CmpItemAbbrMatch = { fg = "#40CC7C" },
	CmpItemMenu = { link = "Special" },
	CmpItemAbbrDeprecated = { fg = "#7E8294", bg = "NONE", strikethrough = true },
	CmpItemAbbrMatchFuzzy = { fg = base.aqua },
	CmpItemKindClass = { link = "SpecialChar" },
	CmpItemKindConstructor = { link = "Label" },
	CmpItemKindField = { link = "Constant" },
	CmpItemKindFile = { link = "Directory" },
	CmpItemKindFolder = { link = "Directory" },
	CmpItemKindFunction = { link = "Function" },
	CmpItemKindMethod = { link = "Function" },
	CmpItemKindInterface = { link = "Identifier" },
	CmpItemKindKeyword = { link = "Keyword" },
	CmpItemKindSnippet = { link = "ShellMode" },
	CmpItemKindText = { link = "String" },
	CmpItemKindValue = { link = "Value" },
	CmpItemKindVariable = { link = "Type" },
	CmpItemKindProperty = { link = "Define" },
	CmpItemKindEvent = { link = "Ignore" },
	CmpItemKindEnum = { link = "Float" },
	CmpItemKindConstant = { link = "Constant" },
	CmpItemKindReference = { link = "Identifier" },
	CmpItemKindStruct = { link = "Structure" },
	CmpItemKindModule = { link = "Statement" },
	CmpItemKindOperator = { link = "Operator" },
	CmpItemKindUnit = { link = "Tag" },
	CmpItemKindEnumMember = { link = "Type" },
	CmpItemKindColor = { link = "Constant" },
	CmpItemKindTypeParameter = { link = "Type" },

	-- LuaSnip
	LuasnipChoiceNode = { fg = "#ff8800", bg = "grey15" },
	LuasnipInsertNode = { fg = "#4fc1ff", bg = "grey15" },

	-- WhichKey
	WhichKey = { link = "Function" },
	WhichKeyGroup = { link = "Type" },
	WhichKeySeparator = { link = "DiffAdded" },
	WhichKeyDesc = { link = "Identifier" },
	WhichKeyFloat = { bg = "#2c2c2c" },
	WhichKeyValue = { link = "Comment" },

	-- Lazy (Package Manager)
	LazyButton = { link = "CursorLine" },
	LazyButtonActive = { link = "Visual" },
	LazyComment = { link = "Comment" },
	LazyCommit = base.Special,
	LazyCommitIssue = base.Number,
	LazyCommitScope = base.Italic,
	LazyCommitType = base.Title,
	LazyDir = { link = "Directory" },
	LazyH1 = { link = "IncSearch" },
	LazyH2 = { link = "Bold" },
	LazyNoCond = { link = "DiagnosticWarn" },
	LazyNormal = { link = "NormalFloat" },
	LazyProgressDone = { link = "Constant" },
	LazyProgressTodo = { link = "LineNr" },
	LazyProp = { link = "Conceal" },
	LazyReasonCmd = base.Operator,
	LazyReasonEvent = base.Constant,
	LazyReasonFt = base.Character,
	LazyReasonKeys = base.Statement,
	LazyReasonPlugin = base.Special,
	LazyReasonRuntime = { link = "@macro" },
	LazyReasonSource = base.Character,
	LazyReasonStart = { link = "@field" },
	LazySpecial = { link = "@punctuation.special" },
	LazyTaskError = base.ErrorMsg,
	LazyTaskOutput = base.MsgArea,
	LazyUrl = { link = "@text.reference" },
	LazyValue = { link = "@string" },

	-- Navic
	NavicText = { link = "Comment" },
	NavicSeparator = { link = "Comment" },
	-- Navic-icons
	NavicIconsFile = { link = "CmpItemKindFile" },
	NavicIconsModule = { link = "CmpItemKindClass" },
	NavicIconsNamespace = { link = "CmpItemKindClass" },
	NavicIconsPackage = { link = "CmpItemKindProperty" },
	NavicIconsClass = { link = "CmpItemKindClass" },
	NavicIconsMethod = { link = "CmpItemKindMethod" },
	NavicIconsProperty = { link = "CmpItemKindProperty" },
	NavicIconsField = { link = "CmpItemKindField" },
	NavicIconsConstructor = { link = "CmpItemKindConstructor" },
	NavicIconsEnum = { link = "CmpItemKindValue" },
	NavicIconsInterface = { link = "CmpItemKindInterface" },
	NavicIconsFunction = { link = "CmpItemKindFunction" },
	NavicIconsVariable = { default = true, link = "CmpItemKindVariable" },
	NavicIconsConstant = { link = "CmpItemKindVariable" },
	NavicIconsString = { link = "CmpItemKindText" },
	NavicIconsNumber = { link = "CmpItemKindValue" },
	NavicIconsBoolean = { link = "CmpItemKindValue" },
	NavicIconsArray = { link = "CmpItemKindVariable" },
	NavicIconsObject = { link = "CmpItemKindVariable" },
	NavicIconsKey = { link = "CmpItemKindKeyword" },
	NavicIconsNull = { link = "TSNone" },
	NavicIconsEnumMember = { link = "CmpItemKindVariable" },
	NavicIconsStruct = { link = "CmpItemKindStruct" },
	NavicIconsEvent = { link = "CmpItemKindEvent" },
	NavicIconsOperator = { link = "CmpItemKindOperator" },
	NavicIconsTypeParameter = { link = "CmpItemKindTypeParameter" },
	NavicIconsText = { link = "CmpItemKindText" },

	-- Ufo (Folding)
   UfoPreviewCursorsLine = { link = "Normal" },
	UfoPreviewSbar = { link = "PmenuSbar" },
	UfoPreviewThumb = { link = "PmenuThumb" },
	UfoFoldedEllipsis = { link = "Comment" },

	-- Noice
	NoiceCmdline = { link = "MsgArea" },
	NoiceCmdlineIcon = { link = "DiagnosticSignInfo" },
	NoiceCmdlineIconSearch = { link = "DiagnosticSignWarn" },
	NoiceCmdlinePopup = { link = "Normal" },
	NoiceCmdlinePopupBorder = { link = "DiagnosticSignInfo" },
	NoiceCmdlinePopupSearchBorder = { link = "DiagnosticSignWarn" },
	NoiceConfirm = { link = "Normal" },
	NoiceConfirmBorder = { link = "DiagnosticSignInfo" },
	NoiceCursor = { link = "Cursor" },
	NoiceFormatConfirm = { link = "CursorLine" },
	NoiceFormatConfirmDefault = { link = "Visual" },
	NoiceFormatDate = { link = "Special" },
	NoiceFormatEvent = { link = "NonText" },
	NoiceFormatKind = { link = "NonText" },
	NoiceFormatLevelDebug = { link = "NonText" },
	NoiceFormatLevelError = { link = "DiagnosticVirtualTextError" },
	NoiceFormatLevelInfo = { link = "DiagnosticVirtualTextInfo" },
	NoiceFormatLevelOff = { link = "NonText" },
	NoiceFormatLevelTrace = { link = "NonText" },
	NoiceFormatLevelWarn = { link = "DiagnosticVirtualTextWarn" },
	NoiceFormatProgressDone = { link = "Search" },
	NoiceFormatProgressTodo = { link = "Comment" },
	NoiceFormatTitle = { link = "Title" },
	NoiceLspProgressClient = { link = "Special" },
	NoiceLspProgressSpinner = { link = "Constant" },
	NoiceLspProgressTitle = { link = "Comment" },
	NoiceMini = { link = "MsgArea" },
	NoicePopup = { link = "NormalFloat" },
	NoicePopupBorder = { link = "FloatBorder" },
	NoicePopupmenu = { link = "Pmenu" },
	NoicePopupmenuBorder = { link = "FloatBorder" },
	NoicePopupmenuMatch = { link = "Special" },
	NoicePopupmenuSelected = { link = "PmenuSel" },
	NoiceScrollbar = { link = "PmenuSbar" },
	NoiceScrollbarThumb = { link = "PmenuThumb" },
	NoiceSplit = { link = "NormalFloat" },
	NoiceSplitBorder = { link = "FloatBorder" },
	NoiceVirtualText = { link = "DiagnosticVirtualTextInfo" },

	-- Null-Ls
	NullLsInfoHeader = base.Define,
	NullLsInfoTitle = base.Title,
	NullLsInfoBorder = base.WinSeparator,
	NullLsInfoSources = base.Directory,

	-- Indent-blankline
	IndentBlanklineContextStart = { sp = "#6c6c6c", underline = true, nocombine = true },
	IndentBlanklineContextChar = { fg = "#6c6c6c" },
	IndentBlanklineChar = { fg = "#3c3c3c" },
	IndentBlanklineIndent1 = { fg = "#3c3c3c" },
	IndentBlanklineIndent2 = { fg = "#3c3c3c" },
	IndentBlanklineIndent3 = { fg = "#3c3c3c" },
	IndentBlanklineIndent4 = { fg = "#3c3c3c" },
	IndentBlanklineIndent5 = { fg = "#3c3c3c" },
	IndentBlanklineIndent6 = { fg = "#3c3c3c" },
}

return M
